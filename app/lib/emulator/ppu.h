#ifndef PPU_H
#define PPU_H

union NESPPUMemoryMap{
    struct {
        char patternTable0[0x1000];
        char patternTable1[0x1000];
        char nameTable0[0x03C0];
        char attributeTable0[0x0040];
        char nameTable1[0x03C0];
        char attributeTable1[0x0040];
        char nameTable2[0x03C0];
        char attributeTable2[0x0040];
        char nameTable3[0x03C0];
        char attributeTable3[0x0040];
        char mirrors1[0x0F00];
        char imagePalette[0x0010];
        char spritePalette[0x0010];
        char mirrors2[0x00E0];
        char mirrors3[0xC000];
    };
    char raw[0x10000];
};

union NESPPURegisters{
    struct {
        unsigned char controlRegister1;
        unsigned char controlRegister2;
        unsigned char processorStatus;
        unsigned char sprRamAddress;
        unsigned char sprRamIO;
        unsigned char vramAddress1;
        unsigned char vramAddress2;
        unsigned char vramIO;
        //TODO: add registers above 0x4000
    };
    struct {
        unsigned char C1;
        unsigned char C2;
        unsigned char P;
        unsigned char SRA;
        unsigned char SRIO;
        unsigned char VRA1;
        unsigned char VRA2;
        unsigned char VRIO;
    };
};

struct RGBColor{
	unsigned char red;
	unsigned char green;
	unsigned char blue;
};

class PPU
{
private:
	const RGBColor colorPalette[0x40] = {
		{0x7C,0x7C,0x7C},
		{0x00,0x00,0xFC},
		{0x00,0x00,0xBC},
		{0x44,0x28,0xBC},
		{0x94,0x00,0x84},
		{0xA8,0x00,0x20},
		{0xA8,0x10,0x00},
		{0x88,0x14,0x00},
		{0x50,0x30,0x00},
		{0x00,0x78,0x00},
		{0x00,0x68,0x00},
		{0x00,0x58,0x00},
		{0x00,0x40,0x58},
		{0x00,0x00,0x00},
		{0x00,0x00,0x00},
		{0x00,0x00,0x00},
		{0xBC,0xBC,0xBC},
		{0x00,0x78,0xF8},
		{0x00,0x58,0xF8},
		{0x68,0x44,0xFC},
		{0xD8,0x00,0xCC},
		{0xE4,0x00,0x58},
		{0xF8,0x38,0x00},
		{0xE4,0x5C,0x10},
		{0xAC,0x7C,0x00},
		{0x00,0xB8,0x00},
		{0x00,0xA8,0x00},
		{0x00,0xA8,0x44},
		{0x00,0x88,0x88},
		{0x00,0x00,0x00},
		{0x00,0x00,0x00},
		{0x00,0x00,0x00},
		{0xF8,0xF8,0xF8},
		{0x3C,0xBC,0xFC},
		{0x68,0x88,0xFC},
		{0x98,0x78,0xF8},
		{0xF8,0x78,0xF8},
		{0xF8,0x58,0x98},
		{0xF8,0x78,0x58},
		{0xFC,0xA0,0x44},
		{0xF8,0xB8,0x00},
		{0xB8,0xF8,0x18},
		{0x58,0xD8,0x54},
		{0x58,0xF8,0x98},
		{0x00,0xE8,0xD8},
		{0x78,0x78,0x78},
		{0x00,0x00,0x00},
		{0x00,0x00,0x00},
		{0xFC,0xFC,0xFC},
		{0xA4,0xE4,0xFC},
		{0xB8,0xB8,0xF8},
		{0xD8,0xB8,0xF8},
		{0xF8,0xB8,0xF8},
		{0xF8,0xA4,0xC0},
		{0xF0,0xD0,0xB0},
		{0xFC,0xE0,0xA8},
		{0xF8,0xD8,0x78},
		{0xD8,0xF8,0x78},
		{0xB8,0xF8,0xB8},
		{0xB8,0xF8,0xD8},
		{0x00,0xFC,0xFC},
		{0xF8,0xD8,0xF8},
		{0x00,0x00,0x00},
		{0x00,0x00,0x00},
	};
public:
	NESPPURegisters registers;
	NESPPUMemoryMap memory;
    PPU();
};

#endif // PPU_H
