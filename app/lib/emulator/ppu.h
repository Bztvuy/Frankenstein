#ifndef PPU_H
#define PPU_H

#include "rom.h"

union NESPPUMemoryMap{
    struct {
        u8 patternTable0[0x1000];
        u8 patternTable1[0x1000];
        u8 nameTable0[0x03C0];
        u8 attributeTable0[0x0040];
        u8 nameTable1[0x03C0];
        u8 attributeTable1[0x0040];
        u8 nameTable2[0x03C0];
        u8 attributeTable2[0x0040];
        u8 nameTable3[0x03C0];
        u8 attributeTable3[0x0040];
        u8 mirrors1[0x0F00];
        u8 imagePalette[0x0010];
        u8 spritePalette[0x0010];
        u8 mirrors2[0x00E0];
        u8 mirrors3[0xC000];
    };
    u8 raw[0x10000];
};

union NESPPURegisters{
    struct {
        u8 controlRegister1;
        u8 controlRegister2;
        u8 processorStatus;
        u8 sprRamAddress;
        u8 sprRamIO;
        u8 vramAddress1;
        u8 vramAddress2;
        u8 vramIO;
        //TODO: add registers above 0x4000
    };
    struct {
        u8 C1;
        u8 C2;
        u8 P;
        u8 SRA;
        u8 SRIO;
        u8 VRA1;
        u8 VRA2;
        u8 VRIO;
    };
};

struct RGBColor{
	u8 red;
	u8 green;
	u8 blue;
};

class Ppu
{
private:
    const RGBColor colorPalette[0x40] = {
            {0x7C,0x7C,0x7C},
            {0x00,0x00,0xFC},
            {0x00,0x00,0xBC},
            {0x44,0x28,0xBC},
            {0x94,0x00,0x84},
            {0xA8,0x00,0x20},
            {0xA8,0x10,0x00},
            {0x88,0x14,0x00},
            {0x50,0x30,0x00},
            {0x00,0x78,0x00},
            {0x00,0x68,0x00},
            {0x00,0x58,0x00},
            {0x00,0x40,0x58},
            {0x00,0x00,0x00},
            {0x00,0x00,0x00},
            {0x00,0x00,0x00},
            {0xBC,0xBC,0xBC},
            {0x00,0x78,0xF8},
            {0x00,0x58,0xF8},
            {0x68,0x44,0xFC},
            {0xD8,0x00,0xCC},
            {0xE4,0x00,0x58},
            {0xF8,0x38,0x00},
            {0xE4,0x5C,0x10},
            {0xAC,0x7C,0x00},
            {0x00,0xB8,0x00},
            {0x00,0xA8,0x00},
            {0x00,0xA8,0x44},
            {0x00,0x88,0x88},
            {0x00,0x00,0x00},
            {0x00,0x00,0x00},
            {0x00,0x00,0x00},
            {0xF8,0xF8,0xF8},
            {0x3C,0xBC,0xFC},
            {0x68,0x88,0xFC},
            {0x98,0x78,0xF8},
            {0xF8,0x78,0xF8},
            {0xF8,0x58,0x98},
            {0xF8,0x78,0x58},
            {0xFC,0xA0,0x44},
            {0xF8,0xB8,0x00},
            {0xB8,0xF8,0x18},
            {0x58,0xD8,0x54},
            {0x58,0xF8,0x98},
            {0x00,0xE8,0xD8},
            {0x78,0x78,0x78},
            {0x00,0x00,0x00},
            {0x00,0x00,0x00},
            {0xFC,0xFC,0xFC},
            {0xA4,0xE4,0xFC},
            {0xB8,0xB8,0xF8},
            {0xD8,0xB8,0xF8},
            {0xF8,0xB8,0xF8},
            {0xF8,0xA4,0xC0},
            {0xF0,0xD0,0xB0},
            {0xFC,0xE0,0xA8},
            {0xF8,0xD8,0x78},
            {0xD8,0xF8,0x78},
            {0xB8,0xF8,0xB8},
            {0xB8,0xF8,0xD8},
            {0x00,0xFC,0xFC},
            {0xF8,0xD8,0xF8},
            {0x00,0x00,0x00},
            {0x00,0x00,0x00},
    };
    NESPPURegisters registers;
    NESPPUMemoryMap memory;
public:
    Ppu(const Rom* rom);
};

#endif // PPU_H
